@model COVID19.Models.NewPersonDtoStep4

@{
    ViewBag.Title = "Datos Médicos";
}

<h2>Datos Médicos</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="well">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.PersonID)

            <div class="form-group">
                @Html.LabelFor(model => model.HaveSymptoms, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.HaveSymptoms, (IEnumerable<SelectListItem>)ViewBag.yesNoOptions, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HadInfectedContact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.HadInfectedContact, (IEnumerable<SelectListItem>)ViewBag.yesNoOptions, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RiskGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.RiskGroup, (IEnumerable<SelectListItem>)ViewBag.yesNoOptions, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RiskReasonID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.RiskReasonID, (IEnumerable<SelectListItem>)ViewBag.riskReasons, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsReturning, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.IsReturning, (IEnumerable<SelectListItem>)ViewBag.yesNoOptions, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountryEntranceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CountryEntranceDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CountryEntranceDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TravelCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TravelCountry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TravelCountry, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PositiveTestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PositiveTestDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PositiveTestDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TreatingDoctor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TreatingDoctor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TreatingDoctor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="@Url.Action("Index")" class="btn btn-info"><< Volver a la búsqueda</a>
                    <a href="@Url.Action("Contact", "Person", new { id = Model.PersonID })" class="btn btn-info">Volver a información de contacto</a>
                    <input type="submit" value="Guardar y continuar >>" class="btn btn-success pull-right" />
                </div>
            </div>
        </div>
    </div>
}
